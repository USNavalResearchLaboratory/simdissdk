if(NOT Protobuf_FOUND)
    find_package(Protobuf CONFIG QUIET)
    if(NOT Protobuf_FOUND)
        find_package(Protobuf QUIET)
    endif()
endif()
if(NOT Protobuf_FOUND)
    return()
endif()

# Try to get Protobuf directory
get_target_property(_PROTO_SO protobuf::libprotobuf IMPORTED_LOCATION_RELEASE)
if(NOT _PROTO_SO)
    get_target_property(_PROTO_SO protobuf::libprotobuf IMPORTED_LOCATION)
endif()
get_filename_component(_PROTO_LIB_DIR "${_PROTO_SO}" DIRECTORY)
get_filename_component(_PROTO_DIR "${_PROTO_LIB_DIR}" DIRECTORY)

if(WIN32)
    vsi_install_target(GDAL::GDAL ThirdPartyLibs)
    set(_PROTO_BIN ${_PROTO_DIR}/bin)
    foreach(_LIB IN ITEMS abseil_dll libprotobuf utf8_range utf8_validity)
        install(PROGRAMS ${_PROTO_BIN}/${_LIB}.dll DESTINATION "${INSTALLSETTINGS_SHARED_LIBRARY_DIR}"
            COMPONENT ThirdPartyLibs CONFIGURATIONS Release RelWithDebInfo MinSizeRel "" OPTIONAL)
        install(PROGRAMS ${_PROTO_BIN}/${_LIB}d.dll DESTINATION "${INSTALLSETTINGS_SHARED_LIBRARY_DIR}"
            COMPONENT ThirdPartyLibs CONFIGURATIONS DEBUG OPTIONAL)
    endforeach()
else()
    foreach(_LIB IN ITEMS abseil_dll protobuf utf8_range utf8_validity)
        if(EXISTS "${_PROTO_LIB_DIR}/lib${_LIB}.so")
            get_symlinks("${_PROTO_LIB_DIR}/lib${_LIB}.so" _LIBS)
            install(PROGRAMS ${_LIBS} DESTINATION "${INSTALLSETTINGS_SHARED_LIBRARY_DIR}" COMPONENT ThirdPartyLibs)
        endif()
    endforeach()
endif()
