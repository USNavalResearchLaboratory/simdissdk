# InstallCMakeExports.cmake
#
# Responsible for extracting the 3rd party library exports into the lib/cmake folder
# and then generating a FindSIMDIS_SDK.cmake that loads them and the SDK exports
# generated by CMake.  Installs an example external project to the share/ folder
# so that end users can use it as a template for developing their own projects.
#

# Add the exports to the installation folder's lib/cmake (configurable)
if(NOT INSTALL_SIMDIS_SDK_LIBRARIES)
    return()
endif()

# Configure the directory where CMake files are installed
set(SDK_LIB_CMAKE_PATH ${INSTALLSETTINGS_LIBRARY_DIR}/cmake)

# Gather a list of all possible imported libraries
set(IMPLIBS)
foreach(LIB IN ITEMS PROTOBUF OSGQT GDAL GEOS GEOS_C OSGEARTH)
    if(TARGET ${LIB})
        list(APPEND IMPLIBS ${LIB})
    endif()
endforeach()
list(APPEND IMPLIBS ${OSG_ALL_LIBDEPENDENCIES})

# Keep a list of all the properties that need to transfer from our imported
# targets to the imported targets used in external projects
set(ALL_PROPS
    INTERFACE_COMPILE_OPTIONS
    INTERFACE_COMPILE_DEFINITIONS
    INTERFACE_INCLUDE_DIRECTORIES
    INTERFACE_LINK_LIBRARIES
    IMPORTED_LOCATION
    IMPORTED_LOCATION_DEBUG
    IMPORTED_IMPLIB
    IMPORTED_IMPLIB_DEBUG
    TYPE
)

# Gather a list of all valid imported libs for the FindSIMDIS_SDK.cmake.in
set(VALID_IMPLIBS)
# Loop over all possible imported libs and create Import___.cmake files for each
foreach(IMPORTED_LIBRARY_NAME IN LISTS IMPLIBS)
    # Only create the file if the target exists
    if(TARGET ${IMPORTED_LIBRARY_NAME})
        # Pull out each property of interest into a variable used by configure_file
        foreach(PROP IN LISTS ALL_PROPS)
            get_target_property(LIB_${PROP} ${IMPORTED_LIBRARY_NAME} ${PROP})
            if(NOT LIB_${PROP})
                set(LIB_${PROP})
            endif()
        endforeach()

        # Tag library correctly as static or shared (used by configure_file)
        if("${LIB_TYPE}" STREQUAL "STATIC_LIBRARY")
            set(LIB_STATIC_OR_SHARED STATIC)
        elseif("${LIB_TYPE}" STREQUAL "SHARED_LIBRARY")
            set(LIB_STATIC_OR_SHARED SHARED)
        else()
            set(LIB_STATIC_OR_SHARED UNKNOWN)
        endif()

        # Create and install the Import___.cmake for this library
        configure_file(CMakeUtilities/ImportedExport.cmake.in
            ${CMAKE_CURRENT_BINARY_DIR}/cmake/Import${IMPORTED_LIBRARY_NAME}.cmake
        )
        install(FILES ${CMAKE_CURRENT_BINARY_DIR}/cmake/Import${IMPORTED_LIBRARY_NAME}.cmake
            DESTINATION ${SDK_LIB_CMAKE_PATH}
            COMPONENT Exports
        )

        # Save in a list so we can include them later in FindSIMDIS_SDK.cmake's configure_file
        list(APPEND VALID_IMPLIBS ${IMPORTED_LIBRARY_NAME})
    endif()
endforeach()

# Add the extra VSI libraries for socket and GL
if(TARGET VSI::SOCKET)
    install(FILES CMakeImport/ImportSocket.cmake DESTINATION ${SDK_LIB_CMAKE_PATH} COMPONENT Exports)
    list(APPEND VALID_IMPLIBS Socket)
endif()
if(TARGET VSI::GL)
    install(FILES CMakeImport/ImportOpenGL.cmake DESTINATION ${SDK_LIB_CMAKE_PATH} COMPONENT Exports)
    list(APPEND VALID_IMPLIBS OpenGL)
endif()

# Detect the valid target names
set(SDK_LIBS simNotify simCore simData simVis simUtil simQt)
foreach(SDK_LIB IN LISTS SDK_LIBS)
    if(TARGET ${SDK_LIB})
        list(APPEND VALID_SDK_LIBS ${SDK_LIB})
    endif()
endforeach()

# Get the absolute path out for use in the configured CMake file ImportSIMDIS_SDK.cmake
set(SDK_LIB_CMAKE_FULLPATH "${CMAKE_INSTALL_PREFIX}/${SDK_LIB_CMAKE_PATH}")

# Create and install the FindSIMDIS_SDK.cmake file
configure_file(CMakeUtilities/FindSIMDIS_SDK.cmake.in
    ${CMAKE_CURRENT_BINARY_DIR}/cmake/FindSIMDIS_SDK.cmake
    @ONLY
)
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/cmake/FindSIMDIS_SDK.cmake
    DESTINATION ${SDK_LIB_CMAKE_PATH}
    COMPONENT Exports
)

# Configure and install the ImportSIMDIS_SDK.cmake useful for external projects
configure_file(CMakeUtilities/ImportSIMDIS_SDK.cmake.in
    ${CMAKE_CURRENT_BINARY_DIR}/cmake/ImportSIMDIS_SDK.cmake
    @ONLY
)
install(FILES
        ${CMAKE_CURRENT_BINARY_DIR}/cmake/ImportSIMDIS_SDK.cmake
        CMakeModules/EnableNewCxxFeatures.cmake
    DESTINATION share/ExternalSdkProject/CMakeModules/
    COMPONENT Exports
)

# Install files from the share folder
install(DIRECTORY share/ DESTINATION share COMPONENT Exports)
