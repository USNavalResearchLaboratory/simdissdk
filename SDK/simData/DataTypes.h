/* -*- mode: c++ -*- */
/****************************************************************************
 *****                                                                  *****
 *****                   Classification: UNCLASSIFIED                   *****
 *****                    Classified By:                                *****
 *****                    Declassify On:                                *****
 *****                                                                  *****
 ****************************************************************************
 *
 *
 * Developed by: Naval Research Laboratory, Tactical Electronic Warfare Div.
 *               EW Modeling & Simulation, Code 5773
 *               4555 Overlook Ave.
 *               Washington, D.C. 20375-5339
 *
 * License for source code is in accompanying LICENSE.txt file. If you did
 * not receive a LICENSE.txt with this code, email simdis@us.navy.mil.
 *
 * The U.S. Government retains all rights to use, duplicate, distribute,
 * disclose, or release this software.
 *
 */
#ifndef DATATYPES_H
#define DATATYPES_H

// File to wrap the simData.pb.h file generated by
// protoc with the appropriate resources

#include <limits>
#include "simCore/Common/Common.h"
#include "simCore/Calc/Vec3.h"

#undef ABSOLUTE
#undef RELATIVE

#ifdef _MSC_VER // [
#pragma warning(push)
// Disable C4244: "conversion from __int64 to int, possible loss of data"
// Disable C4251: "identifier' : class 'type' needs to have dll-interface to be used by clients of class 'type2'"
// Disable C4267: "conversion from size_t to int, possible loss of data"
// Disable C4275: non-DLL-interface classkey 'identifier' used as base for DLL-interface classkey 'identifier'
// Disable C4996: "'std::_Copy_impl': Function call with parameters that may be unsafe"
#pragma warning(disable : 4244 4251 4267 4275 4996)
#endif // _MSC_VER ]

#include "simData.pb.h"

#ifdef _MSC_VER // [
#pragma warning(pop)
#endif // _MSC_VER ]

// Although proto buffers are flexible, they consume too much memory
// Below are memory efficient definitions for the POSIT classes

#include "DataTypeUpdates.h"
#include "DataTypeProperties.h"

namespace simData
{
  /// compare for inequality (required for protobuf utils)
  SDKDATA_EXPORT bool operator!=(const Position &left, const Position &right);

  /// compare for equality (required for protobuf utils)
  SDKDATA_EXPORT bool operator==(const Position &left, const Position &right);
}

#endif

